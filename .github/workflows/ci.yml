name: CI Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-test:
    name: Build, Unit Test, and Integration Test
    runs-on: ubuntu-latest
    env:
      ENV_FILE: .env.example

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.24

      - name: Install Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose

      - name: Build Docker images
        run: |
          echo "Building Docker containers..."
          docker-compose --env-file $ENV_FILE -p content-service up --build -d

      - name: Wait for content-service to be healthy
        run: |
          echo "Waiting for content-service to be healthy..."
          for i in {1..30}; do
            if docker-compose --env-file $ENV_FILE exec -T content-service curl -f http://localhost:8080/content; then
              echo "Content service is healthy!"
              exit 0
            fi
            echo "Waiting for service to start..."
            sleep 2
          done
          echo "Content service did not become healthy!"
          exit 1

      - name: Run unit tests
        run: |
          echo "Running unit tests..."
          make unit-tests

      - name: Run integration tests
        run: |
          echo "Running integration tests..."
          make integration-tests

      - name: Tear down resources
        if: always()
        run: |
          echo "Cleaning up Docker containers..."
          make down
